name: Cmake Auto Build

on:
  push:
    paths:
      - 'VERSION'
  workflow_dispatch:
    inputs:
      name:
        description: 'reason'
        required:    true
        default:     'any'

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  create:
    runs-on: ubuntu-latest
    outputs:
      url: ${{ steps.create_release.outputs.upload_url }}    
    steps:
      - uses: actions/checkout@v2
      - name: version
        shell: bash --login {0}
        run: echo "::set-output name=version::$(cat VERSION)"
        id: version

      - name: Create Release
        id: create_release
        uses: shogo82148/actions-create-release@v1
        with:
          tag_name: v${{ steps.version.outputs.version }}
          release_name: Release v${{ steps.version.outputs.version }}
          body: auto build.
          draft: false
          prerelease: false
      
  build:
    needs: [ create ]
    runs-on: ${{ matrix.platform }}
    continue-on-error: true
    strategy:
      matrix:
        platform: [
#             ubuntu-latest,
#             windows-latest,
            macos-latest
        ]

    steps:
      - uses: actions/checkout@v2

      # make and build applications
      - name: windows or linux build
        if: ${{ matrix.platform != 'macos-latest' }}
        run: |
          pip install ninja
          cmake -G Ninja -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
          cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: osx build
        shell: bash --login {0}
        if: ${{ matrix.platform == 'macos-latest' }}
        run: |
          pip install cmake ninja
          brew reinstall gcc
          PATH=$PATH:$(python -c "import sysconfig; print(sysconfig.get_path('scripts'))")
          cmake -G Ninja -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
          
          cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - uses: shogo82148/actions-upload-release-asset@v1
        if: ${{ matrix.platform == 'windows-latest' }}
        with:
          upload_url: ${{ needs.create.outputs.url }}
          asset_path: "${{github.workspace}}/build/*.zip"

      - uses: shogo82148/actions-upload-release-asset@v1
        if: ${{ matrix.platform != 'windows-latest' }}
        with:
          upload_url: ${{ needs.create.outputs.url }}
          asset_path: "${{github.workspace}}/build/*.gz"

